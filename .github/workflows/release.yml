name: Release

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
            archive: zip
          - target: aarch64-apple-darwin
            os: macos-latest
            archive: zip
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            archive: tar.gz
    steps:
      - uses: actions/checkout@v4

      - name: Install OpenSSL (macOS)
        if: runner.os == 'macOS'
        run: |
          if [[ "${{ matrix.target }}" == "x86_64-apple-darwin" ]]; then
            arch -x86_64 brew install openssl@3
            echo "OPENSSL_ROOT_DIR=/usr/local/opt/openssl@3" >> $GITHUB_ENV
            echo "OPENSSL_LIB_DIR=/usr/local/opt/openssl@3/lib" >> $GITHUB_ENV
            echo "OPENSSL_INCLUDE_DIR=/usr/local/opt/openssl@3/include" >> $GITHUB_ENV
          else
            brew install openssl@3
            echo "OPENSSL_ROOT_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV
            echo "OPENSSL_LIB_DIR=$(brew --prefix openssl@3)/lib" >> $GITHUB_ENV
            echo "OPENSSL_INCLUDE_DIR=$(brew --prefix openssl@3)/include" >> $GITHUB_ENV
          fi
          echo "MACOSX_DEPLOYMENT_TARGET=10.14" >> $GITHUB_ENV

      - name: Install OpenSSL (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        run: |
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            export MACOSX_DEPLOYMENT_TARGET=10.14
          fi
          cargo build --release --target ${{ matrix.target }}

      - name: Create archive
        run: |
          cd target/${{ matrix.target }}/release
          if [ "${{ matrix.archive }}" = "zip" ]; then
            zip -r ../../../hobby-${{ matrix.target }}.zip hobby
          else
            tar czf ../../../hobby-${{ matrix.target }}.tar.gz hobby
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: hobby-${{ matrix.target }}.${{ matrix.archive }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
